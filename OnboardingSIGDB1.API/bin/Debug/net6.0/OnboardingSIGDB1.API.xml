<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OnboardingSIGDB1.API</name>
    </assembly>
    <members>
        <member name="T:OnboardingSIGDB1.API.Controllers.CargoController">
            <summary>
            Requisições da entidade Cargo
            </summary>
        </member>
        <member name="M:OnboardingSIGDB1.API.Controllers.CargoController.#ctor(OnboardingSIGDB1.Domain.Interfaces.Services.ICargoService)">
            <summary>
            Construtor da controller
            </summary>
            <param name="cargoService"></param>
        </member>
        <member name="M:OnboardingSIGDB1.API.Controllers.CargoController.Get">
            <summary>
            Este serviço permite visualizar todos os cargos.
            </summary>
            <returns>Retorna status 200 e todos os cargos </returns>
        </member>
        <member name="M:OnboardingSIGDB1.API.Controllers.CargoController.GetById(System.Int32)">
            <summary>
            Este serviço permite visualizar as informações de um determinado cargo.
            </summary>
            <param name="id"></param>
            <returns>Retorna status 200 e dados do cargo escolhido</returns>
        </member>
        <member name="M:OnboardingSIGDB1.API.Controllers.CargoController.GetAll(OnboardingSIGDB1.Domain.Dto.Cargos.FiltroCargoDto)">
            <summary>
            Este serviço permite visualizar todos ao cargos de acordo com o filtro.
            </summary>
            <param name="filtro"> filtro da requisição</param>
            <returns>Retorna status 200 e todos os cargos de acordo com o filtro</returns>
        </member>
        <member name="M:OnboardingSIGDB1.API.Controllers.CargoController.Post(OnboardingSIGDB1.Domain.Dto.Cargos.CargoInputDto)">
            <summary>
            Este serviço permite cadastrar um novo cargo.
            </summary>
            <param name="cargoInput"> informações da requisição</param>
            <returns>Retorna status 201 e dados do cargo cadastrado</returns>
        </member>
        <member name="M:OnboardingSIGDB1.API.Controllers.CargoController.Put(System.Int32,OnboardingSIGDB1.Domain.Dto.Cargos.CargoInputDto)">
            <summary>
            Este serviço permite alterar um cargo.
            </summary>
            <param name="id"></param>
            <param name="cargoInput"></param>
            <returns>Retorna status 202 e dados do cargo alterado</returns>
        </member>
        <member name="M:OnboardingSIGDB1.API.Controllers.CargoController.Delete(System.Int32)">
            <summary>
            Este serviço permite excluir um cargo.
            </summary>
            <param name="id"></param>
            <returns>Retorna status 202 e id do cargo excluído</returns>
        </member>
        <member name="M:OnboardingSIGDB1.API.Controllers.EmpresaController.Get">
            <summary>
            Este serviço permite visualizar todas as empresas.
            </summary>
            <returns>Retorna status 200 e todas as empresas </returns>
        </member>
        <member name="M:OnboardingSIGDB1.API.Controllers.EmpresaController.GetById(System.Int32)">
            <summary>
            Este serviço permite visualizar as informações de uma determinada empresa.
            </summary>
            <param name="id"></param>
            <returns>Retorna status 200 e dados da empresa escolhida</returns>
        </member>
        <member name="M:OnboardingSIGDB1.API.Controllers.EmpresaController.GetAll(OnboardingSIGDB1.Domain.Dto.Empresas.FiltroEmpresaDto)">
            <summary>
            Este serviço permite visualizar todas as empresas de acordo com o filtro.
            </summary>
            <param name="filtro"> filtro da requisição</param>
            <returns>Retorna status 200 e todas as empresas de acordo com o filtro</returns>
        </member>
        <member name="M:OnboardingSIGDB1.API.Controllers.EmpresaController.Post(OnboardingSIGDB1.Domain.Dto.Empresas.EmpresaInputDto)">
            <summary>
            Este serviço permite cadastrar uma nova empresa.
            </summary>
            <param name="empresaInput"> informações da requisição</param>
            <returns>Retorna status 201 e dados da empresa cadastrada</returns>
        </member>
        <member name="M:OnboardingSIGDB1.API.Controllers.EmpresaController.Put(System.Int32,OnboardingSIGDB1.Domain.Dto.Empresas.EmpresaInputDto)">
            <summary>
            Este serviço permite alterar uma empresa.
            </summary>
            <param name="id"></param>
            <param name="empresaInput"></param>
            <returns>Retorna status 202 e dados da empresa alterada</returns>
        </member>
        <member name="M:OnboardingSIGDB1.API.Controllers.EmpresaController.Delete(System.Int32)">
            <summary>
            Este serviço permite excluir uma empresa.
            </summary>
            <param name="id"></param>
            <returns>Retorna status 202 e id da empresa excluída</returns>
        </member>
        <member name="T:OnboardingSIGDB1.API.Controllers.FuncionarioController">
            <summary>
            Controller de Funcionário
            </summary>
        </member>
        <member name="M:OnboardingSIGDB1.API.Controllers.FuncionarioController.#ctor(OnboardingSIGDB1.Domain.Interfaces.Services.IFuncionarioService)">
            <summary>
            Construtor de funcionário
            </summary>
            <param name="funcionarioService"></param>
        </member>
        <member name="M:OnboardingSIGDB1.API.Controllers.FuncionarioController.Get">
            <summary>
            Este serviço permite visualizar todos os funcionários.
            </summary>
            <returns>Retorna status 200 e todos os funcionários </returns>
        </member>
        <member name="M:OnboardingSIGDB1.API.Controllers.FuncionarioController.GetById(System.Int32)">
            <summary>
            Este serviço permite visualizar as informações de um determinado funcionário.
            </summary>
            <param name="id"></param>
            <returns>Retorna status 200 e dados do funcionário escolhido</returns>
        </member>
        <member name="M:OnboardingSIGDB1.API.Controllers.FuncionarioController.GetAll(OnboardingSIGDB1.Domain.Dto.Funcionarios.FiltroFuncionarioDto)">
            <summary>
            Este serviço permite visualizar todos os funcionários de acordo com o filtro.
            </summary>
            <param name="filtro"> filtro da requisição</param>
            <returns>Retorna status 200 e todos os funcionários de acordo com o filtro</returns>
        </member>
        <member name="M:OnboardingSIGDB1.API.Controllers.FuncionarioController.Post(OnboardingSIGDB1.Domain.Dto.Funcionarios.FuncionarioInputDto)">
            <summary>
            Este serviço permite cadastrar um novo funcionário.
            </summary>
            <param name="funcionarioInput"> informações da requisição</param>
            <returns>Retorna status 201 e dados do funcionário cadastrado</returns>
        </member>
        <member name="M:OnboardingSIGDB1.API.Controllers.FuncionarioController.Put(System.Int32,OnboardingSIGDB1.Domain.Dto.Funcionarios.FuncionarioInputDto)">
            <summary>
            Este serviço permite alterar um funcionário.
            </summary>
            <param name="id"></param>
            <param name="funcionarioInput"></param>
            <returns>Retorna status 202 e dados do funcionário alterado</returns>
        </member>
        <member name="M:OnboardingSIGDB1.API.Controllers.FuncionarioController.Delete(System.Int32)">
            <summary>
            Este serviço permite excluir um funcionário.
            </summary>
            <param name="id"></param>
            <returns>Retorna status 202 e id do funcionário excluído</returns>
        </member>
        <member name="T:OnboardingSIGDB1.API.Controllers.FuncionarioXCargoController">
            <summary>
            Controller da vinculação de cargos a um funcionário.
            </summary>
        </member>
        <member name="M:OnboardingSIGDB1.API.Controllers.FuncionarioXCargoController.#ctor(OnboardingSIGDB1.Domain.Interfaces.Services.IFuncionarioXCargoService)">
            <summary>
            Construtor da controller.
            </summary>
            <param name="funcionarioXCargoService"></param>
        </member>
        <member name="M:OnboardingSIGDB1.API.Controllers.FuncionarioXCargoController.GetAll(OnboardingSIGDB1.Domain.Dto.FuncionarioXCargos.FiltroFuncionarioXCargoDto)">
            <summary>
            Este serviço permite visualizar todos os cargos de funcionário de acordo com o filtro.
            </summary>
            <param name="filtro"> filtro da requisição</param>
            <returns>Retorna status 200 e todos os cargos de funcionário de acordo com o filtro</returns>
        </member>
        <member name="M:OnboardingSIGDB1.API.Controllers.FuncionarioXCargoController.GetById(System.Int32)">
            <summary>
            Este serviço permite visualizar as informações de um cargo do funcionário.
            </summary>
            <param name="id"></param>
            <returns>Retorna status 200 e dados do cargo do funcionário escolhido</returns>
        </member>
        <member name="M:OnboardingSIGDB1.API.Controllers.FuncionarioXCargoController.Post(OnboardingSIGDB1.Domain.Dto.FuncionarioXCargos.FuncionarioXCargoInputDto)">
            <summary>
            Este serviço permite vincular um novo cargo ao funcionário.
            </summary>
            <param name="funcionarioXCargoInput"> informações da requisição</param>
            <returns>Retorna status 201 e dados do funcionário cadastrado</returns>
        </member>
        <member name="M:OnboardingSIGDB1.API.Controllers.FuncionarioXCargoController.Delete(System.Int32)">
            <summary>
            Este serviço permite desvincular um cargo de um funcionário.
            </summary>
            <param name="deleteDto"></param>
            <returns>Retorna status 202 e id do vinculo removido</returns>
        </member>
        <member name="M:OnboardingSIGDB1.API.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
    </members>
</doc>
